package com.company;

    public class MyList {

        class Item
        {
            private int value;
            private Item next;

            public Item(int value) {
                this.value = value;
                this.next = null;
            }

            public boolean hasNext() {
                if (this.next != null) {
                    return true;
                }
                else {
                    return false;
                }
            }

            public int getValue() {
                return value;
            }

            public void setValue(int value) {
                this.value = value;
            }

            public Item getNext() {
                return next;
            }

            public void setNext(Item next) {
                this.next = next;
            }
            public String toString() {
                return Long.toString(this.value);
            }
        }

        private Item begin;
        private long counter;

        public MyList () {
            this.begin = null;
            this.counter = 0;
        }

        public long getCounter() {
            return counter;
        }

        public void add(int value) {
            Item item = new Item(value);
            if (this.begin == null) {
                this.begin = item;
            }
            else {
                end().setNext(item);
            }
            this.counter++;
        }

        public Item end() {
            if (this.begin == null) {
                return null;
            }
            Item iter = this.begin;
            while (iter.hasNext() ) {
                iter = iter.getNext();
            }
            return iter;

        }

        public String toString() {
            String result = "[ ";
            if (this.begin == null) {
                return null;
            }
            else {
                Item iter = this.begin;
                while (iter.hasNext() ) {
                    result += iter.toString() + ", ";
                    iter = iter.getNext();
                }
                result += iter.toString();
            }
            result += " ]";
            return result;

        }
        public Item indexAt(int index) {
            if ((index <= this.counter - 1)&(index >= 0)) {
                Item iter = this.begin;
                for(; index > 0; --index) {
                    iter = iter.getNext();
                }
                System.out.println(iter);
                return iter;
            }
            else
                return null;
        }
        public void swap(int firstPros, int secondPros) {
            if (firstPros > secondPros) {
                int tmp = firstPros;
                firstPros = secondPros;
                secondPros = tmp;
        }
        if (firstPros >= 0) {
            Item firstBef = indexAt(firstPros - 1);
            Item first = this.indexAt(firstPros);
            Item firstAft = this.indexAt(firstPros + 1);
            Item secondBef = this.indexAt(secondPros - 1);
            Item second = this.indexAt(secondPros);
            Item secondAft = this.indexAt(secondPros + 1);

            first.setNext(secondAft);
            if (firstBef != null)
                firstBef.setNext(second);
            else
                this.begin = second;
            if (secondBef != first) {
                secondBef.setNext(first);
                second.setNext(firstAft);
            }
            else {
                second.setNext(first);
        }
    }
    
         public void sort(){
            long count=this.counter;
                int x;
                int y;
                Item temp1;
                Item temp2;
                while(count >0){
                    x = 0;
                    y = 1;
                    temp1 = indexAt(x);
                    temp2 = indexAt(y);
                    while (y <count){
                        if(temp1.getValue()> temp2.getValue()){
                            swap(x,y);
                            x += 1;
                            y += 1;
                            temp1 = indexAt(x);
                            temp2 = indexAt(y);
                        }
                        else if(temp1.getValue() <= temp2.getValue()){
                            ++x;
                            ++y;
                            temp1= temp1.getNext();
                            temp2 = temp2.getNext();
                        }
                    }
                    --count;
                }
            }
        }
    
